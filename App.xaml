<Application
    x:Class="SigmaMS.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--  Palette di Colori Professionale con Accenti Moderni  -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="#1B365D" />
        <!--  Blu navy professionale  -->
        <SolidColorBrush x:Key="SecondaryBrush" Color="#2E5984" />
        <!--  Blu medio  -->
        <SolidColorBrush x:Key="AccentBrush" Color="#0078D4" />
        <!--  Blu Microsoft  -->
        <SolidColorBrush x:Key="AccentLightBrush" Color="#E3F2FD" />
        <!--  Blu chiaro per hover  -->
        <SolidColorBrush x:Key="BackgroundBrush" Color="#F8F9FA" />
        <!--  Grigio chiaro  -->
        <SolidColorBrush x:Key="SurfaceBrush" Color="#FFFFFF" />
        <!--  Bianco  -->
        <SolidColorBrush x:Key="BorderBrush" Color="#E1E5E9" />
        <!--  Grigio bordi  -->
        <SolidColorBrush x:Key="TextPrimaryBrush" Color="#323130" />
        <!--  Grigio scuro testo  -->
        <SolidColorBrush x:Key="TextSecondaryBrush" Color="#605E5C" />
        <!--  Grigio medio testo  -->
        <SolidColorBrush x:Key="TextMutedBrush" Color="#8A8886" />
        <!--  Grigio chiaro testo  -->
        <SolidColorBrush x:Key="SuccessBrush" Color="#107C10" />
        <!--  Verde successo  -->
        <SolidColorBrush x:Key="WarningBrush" Color="#FF8C00" />
        <!--  Arancione warning  -->
        <SolidColorBrush x:Key="ErrorBrush" Color="#D13438" />
        <!--  Rosso errore  -->
        <SolidColorBrush x:Key="HoverBrush" Color="#F3F2F1" />
        <!--  Grigio hover  -->
        <SolidColorBrush x:Key="ActiveBrush" Color="#EDEBE9" />
        <!--  Grigio active  -->

        <!--  ⭐ NUOVI ACCENTI DI COLORE  -->
        <SolidColorBrush x:Key="FolderBrush" Color="#8B5CF6" />
        <!--  Viola moderno per cartelle  -->
        <SolidColorBrush x:Key="FolderLightBrush" Color="#F3F0FF" />
        <!--  Viola chiaro  -->
        <SolidColorBrush x:Key="StoredProcBrush" Color="#10B981" />
        <!--  Verde smeraldo per SP  -->
        <SolidColorBrush x:Key="ViewBrush" Color="#F59E0B" />
        <!--  Ambra per View  -->
        <SolidColorBrush x:Key="FunctionBrush" Color="#EF4444" />
        <!--  Rosso corallo per Function  -->
        <SolidColorBrush x:Key="TriggerBrush" Color="#8B5CF6" />
        <!--  Viola per Trigger  -->
        <SolidColorBrush x:Key="CardShadowBrush" Color="#00000010" />
        <!--  Ombra leggera  -->

        <!--  Stili per Button  -->
        <Style TargetType="Button">
            <Setter Property="Padding" Value="12,8" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="Background" Value="{StaticResource AccentBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#106EBE" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#005A9E" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource TextMutedBrush}" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Stile Button Secondario  -->
        <Style
            x:Key="SecondaryButton"
            BasedOn="{StaticResource {x:Type Button}}"
            TargetType="Button">
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource HoverBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource ActiveBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Stili per TextBox  -->
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="8,6" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="2" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                                <Setter Property="BorderThickness" Value="2" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource SecondaryBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Stili per ComboBox (semplificato per evitare problemi)  -->
        <Style TargetType="ComboBox">
            <Setter Property="Padding" Value="8,6" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="MinHeight" Value="22" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource SecondaryBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Stile per ComboBoxItem  -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Padding" Value="8,6" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource HoverBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Stili per Label  -->
        <Style TargetType="Label">
            <Setter Property="Padding" Value="0,4" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="FontWeight" Value="Medium" />
        </Style>

        <!--  Stile per Label Headers  -->
        <Style
            x:Key="HeaderLabel"
            BasedOn="{StaticResource {x:Type Label}}"
            TargetType="Label">
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        </Style>

        <!--  Stili per TreeView  -->
        <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="False" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border
                                x:Name="ItemBorder"
                                Grid.Row="0"
                                Padding="4,6"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                CornerRadius="3">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton
                                        x:Name="Expander"
                                        Grid.Column="0"
                                        Margin="0,0,4,0"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        ClickMode="Press"
                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Path
                                            x:Name="ExpandPath"
                                            Data="M 4 0 L 8 4 L 4 8 Z"
                                            Fill="{StaticResource TextSecondaryBrush}"
                                            RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </Path.RenderTransform>
                                        </Path>
                                    </ToggleButton>
                                    <ContentPresenter
                                        x:Name="PART_Header"
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        ContentSource="Header" />
                                </Grid>
                            </Border>
                            <ItemsPresenter
                                x:Name="ItemsHost"
                                Grid.Row="1"
                                Margin="16,0,0,0"
                                Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible" />
                                <Setter TargetName="ExpandPath" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="90" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource AccentBrush}" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter TargetName="ExpandPath" Property="Fill" Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource HoverBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                            </Trigger>
                            <!--  Trigger per combinazione MouseOver + Selected  -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ItemBorder" Property="Background" Value="#106EBE" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter TargetName="ExpandPath" Property="Fill" Value="White" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasItems" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Stili per DataGrid con accenti di colore  -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="GridLinesVisibility" Value="Horizontal" />
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="AlternatingRowBackground" Value="#FAFBFC" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="RowHeight" Value="36" />
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#1B365D" />
                        <GradientStop Offset="1" Color="#2E5984" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Padding" Value="12,8" />
            <Setter Property="BorderBrush" Value="{StaticResource SecondaryBrush}" />
            <Setter Property="BorderThickness" Value="0,0,1,0" />
        </Style>

        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentLightBrush}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Offset="0" Color="#E3F2FD" />
                                <GradientStop Offset="1" Color="#BBDEFB" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Stili per evidenziare tipi di oggetti con colori  -->
        <Style x:Key="StoredProcedureText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource StoredProcBrush}" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style x:Key="ViewText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ViewBrush}" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style x:Key="FunctionText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource FunctionBrush}" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style x:Key="TriggerText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TriggerBrush}" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <!--  Stili per StatusBar  -->
        <Style TargetType="StatusBar">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Height" Value="28" />
        </Style>

        <!--  Stili per Menu  -->
        <Style TargetType="Menu">
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="FontSize" Value="13" />
        </Style>

        <Style TargetType="MenuItem">
            <Setter Property="Padding" Value="12,8" />
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Stili per ToolBar  -->
        <Style TargetType="ToolBar">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="Padding" Value="8" />
        </Style>

        <!--  Effetto ombra  -->
        <DropShadowEffect
            x:Key="DropShadowEffect"
            BlurRadius="8"
            Direction="270"
            Opacity="0.15"
            ShadowDepth="2"
            Color="Black" />

        <!--  Stile per Expander con gradiente  -->
        <Style TargetType="Expander">
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="12" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <ToggleButton
                                    Grid.Row="0"
                                    Padding="12,10"
                                    HorizontalContentAlignment="Left"
                                    BorderThickness="0"
                                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                        <GradientStop Offset="0" Color="#F8F9FA" />
                                                        <GradientStop Offset="1" Color="#E9ECEF" />
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border
                                                            Padding="{TemplateBinding Padding}"
                                                            Background="{TemplateBinding Background}"
                                                            CornerRadius="6,6,0,0">
                                                            <ContentPresenter />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                            <GradientStop Offset="0" Color="#E3F2FD" />
                                                                            <GradientStop Offset="1" Color="#BBDEFB" />
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Path
                                            x:Name="ExpanderArrow"
                                            Grid.Column="0"
                                            Margin="0,0,8,0"
                                            Data="M 0 0 L 4 4 L 8 0 Z"
                                            Fill="{StaticResource AccentBrush}"
                                            RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </Path.RenderTransform>
                                        </Path>
                                        <ContentPresenter
                                            Grid.Column="1"
                                            VerticalAlignment="Center"
                                            ContentSource="Header"
                                            TextElement.FontWeight="SemiBold"
                                            TextElement.Foreground="{StaticResource PrimaryBrush}" />
                                    </Grid>
                                </ToggleButton>
                                <ContentPresenter
                                    x:Name="Content"
                                    Grid.Row="1"
                                    Margin="{TemplateBinding Padding}"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="Content" Property="Visibility" Value="Visible" />
                                <Setter TargetName="ExpanderArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Stile per CheckBox  -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Margin" Value="4" />
        </Style>

    </Application.Resources>
</Application>